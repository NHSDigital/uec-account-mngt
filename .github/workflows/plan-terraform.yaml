name: Plan terraform

on:
  # workflow_call:
  #   inputs:
  #     account: # the parameter passed in lieu of matrix below
  #       required: true
  #       type: string

  push:
    branches:
      - 'task/DR-316_Proto_type_twr'
  # workflow_dispatch:
  #   inputs:
  #     environment:
  #       type: choice
  #       description: Choose the Environment
  #       required: true
  #       options:
  #         - dev
  #         - preprod
  #         - prod
  #         - security
  #         - test

jobs:
  versionExtract:
    name: Extract Min/Max Terraform Versions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@main
        with:
          directory: ./infrastructure/remote
    outputs:
      minVersion: ${{ steps.minMax.outputs.minVersion }}
      maxVersion: ${{ steps.minMax.outputs.maxVersion }}

  versionEvaluate:
    name: Evaluate Min/Max Versions
    runs-on: ubuntu-latest
    environment:
      name: dev
    permissions:
      id-token: write
      contents: read
    needs: versionExtract
    strategy:
      matrix:
        version:
          - ${{ needs.versionExtract.outputs.minVersion }}
          - ${{ needs.versionExtract.outputs.maxVersion }}
        stack:
          - uec-developer-role
          - uec-support-role

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/uec-github-runner
          role-session-name: github-pipeline-session
          aws-region: eu-west-2

      - name: Install Terraform v${{ matrix.version }}
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.version }}

      - name: Initialize and validate v${{ matrix.version }}
        run: |
          export ACTION=validate
          export STACK=${{ matrix.stack }}
          export ACCOUNT_PROJECT=dos
          export ACCOUNT_TYPE=dev
          /bin/bash ./scripts/terraform-validate.sh

  run-terraform:
    runs-on: ubuntu-latest
    environment:
      name: dev
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        stack:
          - uec-developer-role
          - uec-support-role
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/uec-github-runner
          role-session-name: github-pipeline-session
          aws-region: eu-west-2

      - name: Initialise and Run Terraform
        run: |
          export ACTION=plan
          export STACK=${{ matrix.stack }}
          export ACCOUNT_PROJECT=dos
          export ACCOUNT_TYPE=dev
          /bin/bash ./scripts/infra-deploy.sh





